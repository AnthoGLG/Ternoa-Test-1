import { File } from "formdata-node";
import { PGPKeysType } from "./types";
/**
 * @name generatePGPKeys
 * @summary                 Generates a new PGP key pair.
 * @returns                 An object with both private and public PGP keys.
 */
export declare const generatePGPKeys: () => Promise<PGPKeysType>;
/**
 * @name encryptContent
 * @summary                 Encrypts a content (string).
 * @param content           Content to encrypt.
 * @param publicPGPKey      Public Key to encrypt the content.
 * @see                     Learn more about encryption {@link https://docs.openpgpjs.org/global.html#encrypt here}.
 * @returns                 A string containing the encrypted content.
 */
export declare const encryptContent: (content: string, publicPGPKey: string) => Promise<string>;
/**
 * @name encryptFile
 * @summary                 Encrypts file with the public key.
 * @param file              File to encrypt.
 * @param publicPGPKey      Public Key to encrypt the file.
 * @see                     Learn more about encryption {@link https://docs.openpgpjs.org/global.html#encrypt here}.
 * @returns                 A string containing the encrypted file.
 */
export declare const encryptFile: (file: File, publicPGPKey: string) => Promise<string>;
/**
 * @name decryptFile
 * @summary                 Decrypts message with the private key.
 * @param encryptedMessage  Message to decrypt.
 * @param privatePGPKey     Private Key to decrypt the message.
 * @see                     Learn more about encryption {@link https://docs.openpgpjs.org/global.html#decrypt here}.
 * @returns                 A base64 string containing the decrypted message.
 */
export declare const decryptFile: (encryptedMessage: string, privatePGPKey: string) => Promise<string>;
