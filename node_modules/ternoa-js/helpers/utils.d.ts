/// <reference types="node" />
import { File } from "formdata-node";
import { Buffer } from "buffer";
import { RetryUploadErrorType } from "./types";
/**
 * @name convertFileToBuffer
 * @summary                 Converts a File to Buffer.
 * @param file              File to convert.
 * @returns                 A Buffer.
 */
export declare const convertFileToBuffer: (file: File) => Promise<Buffer>;
/**
 * @name formatPermill
 * @summary         Checks that percent is in range 0 to 100 and format to permill.
 * @param percent   Number in range from 0 to 100 with max 4 decimals.
 * @returns         The formated percent in permill format.
 */
export declare const formatPermill: (percent: number) => number;
export declare const roundBalance: (amount: string) => number;
export declare const removeURLSlash: (url: string) => string;
export declare const retryPost: <T>(fn: () => Promise<any>, n: number) => Promise<RetryUploadErrorType | T>;
export declare const ensureHttps: (url: string) => string;
export declare const timeoutTrigger: <T>(fn: () => Promise<T>, duration?: number) => Promise<T>;
