import { TransmissionAtBlock, TransmissionAtBlockWithReset, TransmissionCancellation, TransmissionOnConsent, TransmissionOnConsentAtBlock } from "./types";
/**
 * @name formatAtBlockProtocol
 * @summary                        Returns an object according to the atBlock transmission protocol format.
 * @param protocol                 The protocol (string) : "atBlock".
 * @param executionBlock           The block number to execute the atBlock transmission protocol.
 * @returns                        An object representing the atBlock transmission protocol.
 */
export declare const formatAtBlockProtocol: (protocol: "atBlock", executionBlock: number) => TransmissionAtBlock;
/**
 * @name formatAtBlockWithResetProtocol
 * @summary                        Returns an object according to the atBlockWithReset transmission protocol format.
 * @param protocol                 The protocol (string) : "BlockWithReset".
 * @param executionBlockWithReset  The block number to execute the atBlockWithReset transmission protocol. It can be updated later by user.
 * @returns                        An object representing the atBlockWithReset transmission protocol.
 */
export declare const formatAtBlockWithResetProtocol: (protocol: "atBlockWithReset", executionBlockWithReset: number) => TransmissionAtBlockWithReset;
/**
 * @name formatOnConsentProtocol
 * @summary                        Returns an object according to the OnConsent transmission protocol format.
 * @param protocol                 The protocol (string) : "OnConsent".
 * @param consentList              An array of account address that need to consent the protocol.
 * @param threshold                The minimum number of consent to valid the protocol execution.
 * @returns                        An object representing the onConsent transmission protocol.
 */
export declare const formatOnConsentProtocol: (protocol: "onConsent", consentList: string[], threshold: number) => TransmissionOnConsent;
/**
 * @name formatOnConsentAtBlockProtocol
 * @summary                        Returns an object according to the onConsentAtBlock transmission protocol format.
 * @param protocol                 The protocol (string) : "onConsentAtBlock".
 * @param consentList              An array of account address that need to consent the protocol.
 * @param threshold                The minimum number of consent to valid the protocol execution.
 * @param block                    The block number before which each user consent is expected.
 * @returns                        An object representing the onConsentAtBlock transmission protocol.
 */
export declare const formatOnConsentAtBlockProtocol: (protocol: "onConsentAtBlock", consentList: string[], threshold: number, block: number) => TransmissionOnConsentAtBlock;
/**
 * @name formatProtocolCancellation
 * @summary                        Returns an object according to the cancellation kind required.
 * @param cancellation             The cancellation kind (string) : "anytime", "none" or "untilBlock".
 * @param UntilBlock               The block number before which user cancellation is available. Can only be set for "untilBlock" cancellation.
 * @returns                        An object representing the cancellation of the transmission protocol.
 */
export declare const formatProtocolCancellation: (cancellation: "anytime" | "none" | "untilBlock", UntilBlock?: number) => TransmissionCancellation;
