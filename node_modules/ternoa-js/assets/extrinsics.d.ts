import BN from "bn.js";
import type { IKeyringPair } from "@polkadot/types/types";
import { WaitUntil } from "../constants";
import { TransactionHashType } from "../blockchain";
import { AssetTransferredEvent } from "../events";
/**
 * @name assetTransferTx
 * @summary             Creates an unsigned unsubmitted Assets-Transfer Transaction Hash.
 * @param id            ID of the Asset
 * @param to            Public address of the account to transfer the amount to.
 * @param amount        Token amount to transfer.
 * @returns             Unsigned unsubmitted Assets-Transfer Transaction Hash. The Hash is only valid for 5 minutes.
 */
export declare const assetTransferTx: (id: number, to: string, amount: number | BN) => Promise<TransactionHashType>;
/**
 * @name assetTransfer
 * @summary             Transfers some balance to another account.
 * @param id            ID of the Asset
 * @param to            Public address of the account to transfer the amount to.
 * @param amount        Token amount to transfer.
 * @param keyring       Account that will sign the transaction.
 * @param waitUntil     Execution trigger that can be set either to BlockInclusion or BlockFinalization.
 * @returns             AssetTransferredEvent Blockchain event.
 */
export declare const assetTransfer: (id: number, to: string, amount: number | BN, keyring: IKeyringPair, waitUntil: WaitUntil) => Promise<AssetTransferredEvent>;
